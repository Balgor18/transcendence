generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement()) // primary key
  nickname  String? @unique
  username  String
  avatar    String?
  profileId String
  provider  String

  // MatchEntry
  matchEntries MatchEntry[]

  @@unique([profileId, provider])
}

// model GithubUser {
//   user User?
// }

model MatchEntry {
  id    Int @id @default(autoincrement())
  score Int

  // User
  userId Int
  user   User @relation(fields: [userId], references: [id])

  matchId Int
  match   Match @relation(fields: [matchId], references: [id])
}

model Match {
  id        Int          @id @default(autoincrement())
  entries   MatchEntry[]
  state     MatchState
  startDate DateTime?
  endDate   DateTime?
}

enum MatchState {
  Scheduled
  Started
  Finished
}

// https://www.npmjs.com/package/@quixo3/prisma-session-store#Model
model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
