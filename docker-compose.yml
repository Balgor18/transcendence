networks:
  transcendance:

services:

  # proxy:
  #   depends_on:
  #     - client
  #     - api
  #   container_name: nginx
  #   image: nginx:1.23.3
  #   networks:
  #     - transcendance
  #   ports:
  #     - 443:443
  #   restart: unless-stopped

  frontend:
    container_name: ${FRONTEND_NAME}
    image: ${NODE_VERSION}
    stdin_open: true
    tty: true

    working_dir: /app-${FRONTEND_NAME}
    # Install project dependencies,, then run front
    command: >
            sh -cx "npm install
            && npm run start"
    # Ports should always be strings
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file:
      - .env
    networks:
      - transcendance
    volumes:
      - ./${FRONTEND_NAME}:/app-${FRONTEND_NAME}
    restart: unless-stopped

  database:
    container_name: postgres
    image: postgres:15.1
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - transcendance
    restart: unless-stopped

  backend:
    depends_on:
      - database
    container_name: ${BACKEND_NAME}
    image: ${NODE_VERSION}
    working_dir: /app-${BACKEND_NAME}
    # install project dependencies,
    # then run in dev mode
    command: >
            sh -cx "yarn install
            && yarn run start:dev"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - .env
    networks:
      - transcendance
    volumes:
      - ./${BACKEND_NAME}:/app-${BACKEND_NAME}
    # stdin_open: true
    # tty: true
    restart: unless-stopped